{"name":"Collection.js","tagline":"Collection.js is small but yet powerfull local database build on top of the localstorage.","body":"collection.js\r\n=============\r\n\r\nCollection.js is small but yet powerfull local database build on top of the localstorage.\r\nCollection.js works with all modern browsers:\r\n - >=FF 4.0\r\n - >=Chrome 5\r\n - >=IE9\r\n - >=Opera 11.6\r\n - >=Safari 5.1\r\n\r\nIf you need IE8 support use [es5 pollyfill](https://github.com/inexorabletash/polyfill/blob/master/es5.js)\r\n\r\nWhy I should bother?\r\n===================\r\nIf you are looking for simple solution to store you data locally and localStorage is not enough try collection.js.\r\nCollection.js gives you powerfull API, which allows you to save/update/remove/sort/filter data.\r\n\r\nPros:\r\n----\r\n - No configuration\r\n - No dependencies\r\n - Simple API\r\n - MIT license\r\n - only 1 KB minified and gzipped\r\n\r\n\r\nExamples\r\n========\r\n\r\nCreating a collection\r\n---------------------\r\n\r\n```js\r\nvar myCollection = new Collection('myCollection');\r\n```\r\n\r\nAdding data to collection\r\n-------------------------\r\n```js\r\nmyCollection.save({test: 'test'});\r\n```\r\n\r\nRemoving data from collection\r\n-------------------------\r\n```js\r\nmyCollection.remove(1);\r\n```\r\n\r\nQuering data\r\n-------------------------\r\n```js\r\nmyCollection.find(function(item) {\r\n    if (item.description.substring('test') >= 0) {\r\n        return true;\r\n    }\r\n});\r\n\r\n```\r\n\r\nSorting data\r\n-------------------------\r\n```js\r\nmyCollection.sort(function(a,b){\r\n    return a.order - b.order;\r\n});\r\n```\r\n\r\nGetting by id\r\n-------------------------\r\n```js\r\nmyCollection.id(1);\r\n```\r\n\r\nGrouping a collection\r\n----------------\r\n\r\n```js\r\nmyCollection.group('key');\r\n```\r\n\r\nDestroying a collection\r\n----------------\r\n\r\n```js\r\nmyCollection.destroy();\r\n```\r\n\r\nLooping trough the collection\r\n---------------------------\r\n\r\n```js\r\nfor (var i = 0; i < myCollection.length; i++) {\r\n    console.log(myCollection[i]);\r\n}\r\n```\r\n\r\nAPI\r\n========\r\n\r\n`new Collection(name, reader, writer)`\r\n------------------------------------------------\r\n\r\nCreates new collection object\r\n\r\n###Properties\r\n - `name` collection's name points to localStorage's key name\r\n - `reader` (optional) called when collection is loaded from localStorage, allows you to cast data, or extend entities\r\n - `writer` (optional) called right before the entity is saved\r\n\r\n`Collection.read`\r\n------------------------------------------------\r\n\r\nReloads data from localstorage\r\n\r\n###Properties\r\n- `reader` (optional) called when collection is loaded from localStorage on each entity object\r\n\r\n`Collection.save(entity)`\r\n------------------------------------------------\r\n\r\nSaves or updates entity in the collection, returns the entitie's id\r\n\r\n###Properties\r\n - `entity` object stored in the collection (after storing each object automatically gets immutable `_id` key)\r\n\r\n`Collection.remove(entity)`\r\n------------------------------------------------\r\n\r\nRemoves existing entity\r\n\r\n###Properties\r\n- `entity` can be either entity or entities's id\r\n\r\n`Collection.id(id)`\r\n------------------------------------------------\r\nReturns entity with given id\r\n\r\n###Properties\r\n- `id` entitie's id\r\n\r\n`Collection.find(query, sort)`\r\n------------------------------------------------\r\nFilters entities matching the `query` function. If none passed all entities will be available in collection\r\n\r\n###Properties\r\n- `query` (optional) filter function\r\n- `sort` (optional) sorting function\r\n\r\n`Collection.sort(sort)`\r\n------------------------------------------------\r\nSorts the collection\r\n\r\n###Properties\r\n- `sort` sorting function\r\n\r\n\r\n`Collection.group(key)`\r\n------------------------------------------------\r\nGroups collection by key's value and returns object with grouped elements.\r\n\r\n###Properties\r\n- `key` entities' property name which value should be used to group entities.\r\n\r\n\r\n`Collection.drop()`\r\n------------------------------------------------\r\nClears collection object and destroys collection's data stored in local storage\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}